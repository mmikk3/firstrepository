#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Найти сумму элементов всей матрицы.
# Определить, какую долю в этой сумме составляет сумма элементов каждого столбца.
# Результат оформить в виде матрицы из N+1 строк и M столбцов.
matrix = [[3,4,6,12,15],
         [4,6,8,1,2],
         [5,3,4,7,10]]
sumel=0
for i in matrix:
    for j in i:
        sumel+=j
print(f'Сумма элементов матрицы',sumel)
sumstolb=0
for j in range(0,5):
    for i in range(0,3):
        sumstolb+=matrix[i][j]
    print(f'Доля каждого столбца из суммы чисел матрицы',round(sumstolb/sumel,3))
    sumstolb=0
for i in matrix:
    print(i)
#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Перемножить элементы каждого столбца матрицы с соответствующими элементами К­го столбца.
ymnojenie=[]
a=0
k=2
for j in range(5):
    for i in range(3):
        a=(matrix[i][j]*matrix[i][k])
        ymnojenie.append(a)
print(ymnojenie)
#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Просуммировать элементы каждой строки матрицы с соответствующими элементами L ­ той строки.
a=0
l=2
b=[]
for i in range(3):
    b=[]
    for j in range(5):
        a=matrix[i][j]+matrix[2][j]
        b.append(a)
    print(b)
#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Все элементы имеют целый тип. Дано целое число Н.
# Определить, какие столбцы имеют хотя бы одно такое число, а какие не имеют.
H=7
for j in range(5):
    for i in range(3):
        if matrix[i][j]==H:
            print('один столбец содержит число H',matrix[i][j])
            print(f'номер столбца содержащего число',j)
#Выполнить обработку элементов квадратной матрицы А, имеющей N строк и N столбцов.
# Найти сумму элементов, стоящих на главной диагонали, и сумму элементов, стоящих на побочной диагонали.
A=[[3,5,9,5],
  [1,2,3,4],
  [3,6,2,0],
  [2,4,6,8]]
summa=0
for j in range(4):
    for i in range(4):
        if j==i:
            summa+=A[i][j]
print('Сумма главной диагонали',summa)
summapoboch=0
for j in range(4):
    for i in range(4):
        if j-i==1 and j>i:
            summapoboch+=A[i][j]
print('Сумма побочной диагонали',summapoboch)
#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Исходная матрица состоит из нулей и единиц.
# Добавить к матрице еще один столбец, каждый элемент которого делает количество единиц в каждой строке четным.
G=[[0,0,1],
   [1,1,0],
   [1,0,0]]
for i in G:
    if i.count(1) % 2 == 1:
        i.append(1)
    else:
        i.append(0)
for i in G:
    print(i)
#Выполнить обработку элементов прямоугольной матрицы А, имеющей N строк и М столбцов.
# Дан номер строки L и номер столбца К, при помощи которых исходная матрица разбивается на четыре части.
# Найти среднее арифметическое элементов каждой части.
L=K=2
A=[[0,2,3,2,5],
  [2,3,4,5,6],
  [5,2,2,1,1],
  [8,4,2,1,3],
  [1,2,3,4,5]]
sum1=0
sum2=0
sum3=0
sum4=0
for i in range(5):
    for j in range(5):
        if j<2 and i<2:
            sum1+=A[i][j]
        elif j<2 and i>2:
            sum2+=A[i][j]
        elif j>2 and i<2:
            sum3+=A[i][j]
        elif j>2 and i>2:
            sum4=A[i][j]
mid_arifrm1=sum1/4
print(f'Среднее арифметическое 1-ой части:',sum1/4)
print(f'Среднее арифметическое 2-ой части:',sum2/4)
print(f'Среднее арифметическое 3-ей части:',sum3/4)
print(f'Среднее арифметическое 4-ой части:',sum4/4)
#Спиралька
o=[]
for i in range(3):
    o.append([0])
    for j in range(2):
        o[i].append(0)
print(o)
for i in range(3):
    for j in range(3):
        while len(o)>=j and len(o)>=i
print(o)
